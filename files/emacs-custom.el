;; custom variables
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(LaTeX-math-list
   '(("C-k (" "llparenthesis" "" nil)
     ("C-k )" "rrparenthesis" "" nil)
     ("C-k k"
      (lambda nil
        (interactive)
        (insert "\\cata{}")
        (backward-char))
      "" nil)
     (79 "circ" "" nil)
     (61 "equiv" "" nil)
     ("C-k -"
      (lambda nil
        (interactive)
        (insert "\\bar{}")
        (backward-char))
      "" nil)
     ("<right>" "Rightarrow" "" nil)
     ("<left>" "Leftarrow" "" nil)
     ("<up>" "Leftrightarrow" "" nil)
     ("<f1>" "ldots" "" nil)))
 '(TeX-PDF-mode t)
 '(TeX-command-list
   '(("TeX" "%(PDF)%(tex) %`%S%(PDFout)%(mode)%' %t" TeX-run-TeX nil
      (plain-tex-mode texinfo-mode ams-tex-mode)
      :help "Run plain TeX")
     ("LaTeX" "%`%l%(mode)%' %t" TeX-run-TeX nil
      (latex-mode doctex-mode)
      :help "Run LaTeX")
     ("Makeinfo" "makeinfo %t" TeX-run-compile nil
      (texinfo-mode)
      :help "Run Makeinfo with Info output")
     ("Makeinfo HTML" "makeinfo --html %t" TeX-run-compile nil
      (texinfo-mode)
      :help "Run Makeinfo with HTML output")
     ("AmSTeX" "%(PDF)amstex %`%S%(PDFout)%(mode)%' %t" TeX-run-TeX nil
      (ams-tex-mode)
      :help "Run AMSTeX")
     ("ConTeXt" "texexec --once --texutil %(execopts)%t" TeX-run-TeX nil
      (context-mode)
      :help "Run ConTeXt once")
     ("ConTeXt Full" "texexec %(execopts)%t" TeX-run-TeX nil
      (context-mode)
      :help "Run ConTeXt until completion")
     ("BibTeX" "bibtex %s" TeX-run-BibTeX nil t :help "Run BibTeX")
     ("Biber" "biber %s" TeX-run-Biber nil t :help "Run Biber")
     ("View" "%V" TeX-run-discard-or-function t t :help "Run Viewer")
     ("Print" "%p" TeX-run-command t t :help "Print the file")
     ("Queue" "%q" TeX-run-background nil t :help "View the printer queue" :visible TeX-queue-command)
     ("File" "%(o?)dvips %d -o %f " TeX-run-command t t :help "Generate PostScript file")
     ("Index" "makeindex %s" TeX-run-command nil t :help "Create index file")
     ("Check" "lacheck %s" TeX-run-compile nil
      (latex-mode)
      :help "Check LaTeX file for correctness")
     ("Spell" "(TeX-ispell-document \"\")" TeX-run-function nil t :help "Spell-check the document")
     ("Clean" "TeX-clean" TeX-run-function nil t :help "Delete generated intermediate files")
     ("Clean All" "(TeX-clean t)" TeX-run-function nil t :help "Delete generated intermediate and output files")
     ("Other" "" TeX-run-command t t :help "Run an arbitrary command")
     ("Run Zathura" "zathura --fork -s -x \"emacsclient --no-wait +%%{line} %%{input}\" %s.pdf" TeX-run-command nil t :help "Run Zathura PDF viewer")))
 '(TeX-output-view-style
   '(("^dvi$"
      ("^landscape$" "^pstricks$\\|^pst-\\|^psfrag$")
      "%(o?)dvips -t landscape %d -o && gv %f")
     ("^dvi$" "^pstricks$\\|^pst-\\|^psfrag$" "%(o?)dvips %d -o && gv %f")
     ("^dvi$"
      ("^\\(?:a4\\(?:dutch\\|paper\\|wide\\)\\|sem-a4\\)$" "^landscape$")
      "%(o?)yap %dS -paper a4r -s 0 %d")
     ("^dvi$" "^\\(?:a4\\(?:dutch\\|paper\\|wide\\)\\|sem-a4\\)$" "%(o?)yap %dS -paper a4 %d")
     ("^dvi$"
      ("^\\(?:a5\\(?:comb\\|paper\\)\\)$" "^landscape$")
      "%(o?)yap %dS -paper a5r -s 0 %d")
     ("^dvi$" "^\\(?:a5\\(?:comb\\|paper\\)\\)$" "%(o?)yap %dS -paper a5 %d")
     ("^dvi$" "^b5paper$" "%(o?)yap %dS -paper b5 %d")
     ("^dvi$" "^letterpaper$" "%(o?)yap %dS -paper us %d")
     ("^dvi$" "^legalpaper$" "%(o?)yap %dS -paper legal %d")
     ("^dvi$" "^executivepaper$" "%(o?)yap %dS -paper 7.25x10.5in %d")
     ("^dvi$" "." "%(o?)yap %dS %d")
     ("^pdf$" "." "gsview32 -remote %s -raise %o %(outpage)")
     ("^html?$" "." "netscape %o")))
 '(TeX-source-correlate-method 'synctex)
 '(TeX-source-correlate-mode t)
 '(TeX-view-program-list
   '(("View with Zathura"
      ("zathura"
       (mode-io-correlate " --synctex-forward %n:0:%b")
       " %s.pdf"))
     ("View with Sumatra"
      ("sumatra -reuse-instance"
       (mode-io-correlate " -forward-search %b %n ")
       " %o"))))
 '(TeX-view-program-selection
   '(((output-dvi style-pstricks)
      "dvips and start")
     (output-dvi "Yap")
     (output-pdf "View with Zathura")
     (output-html "start")))
 '(abm-ignore-buffers
   '("\\.ido\\.last" "\\.git" "\\.svn" "\\.log" "Maildir" "\\*message\\*" "\\.cask" "\\.avfs" "/tmp/crontab" "-autoloads\\.el$" "elfeed/index" "Org Src" "320360-c916-4b40-b614-3e99ac7fd4c6"))
 '(abm-old-bookmark-threshold 45)
 '(ag-highlight-search t)
 '(ahk-indentation 2)
 '(alert-default-style 'libnotify)
 '(anzu-search-threshold 1000)
 '(appt-audible nil)
 '(appt-display-format nil)
 '(appt-display-interval 5)
 '(appt-message-warning-time 15)
 '(auth-source-save-behavior nil)
 '(auto-save-file-name-transforms nil)
 '(autobookmarks-mode t)
 '(background-color "#002b36")
 '(background-mode dark)
 '(bdf-directory-list '("/usr/share/emacs/fonts/bdf"))
 '(bind-key-column-widths '(20 . 70))
 '(bind-key-describe-special-forms t)
 '(bjump-dired-open-command 'dired-open-file)
 '(blink-cursor-mode nil)
 '(blink-matching-paren nil)
 '(bookmark-version-control t)
 '(browse-at-remote-remote-type-domains
   '(("bitbucket.org" . "bitbucket")
     ("sc.github.com" . "github")
     ("github.com" . "github")
     ("gitlab.com" . "gitlab")
     ("git.savannah.gnu.org" . "gnu")
     ("gist.github.com" . "gist")
     ("gitlab.logio.cz" . "gitlab")))
 '(browse-kill-ring-quit-action 'save-and-restore)
 '(calc-undo-length 1000)
 '(calendar-latitude 49.2)
 '(calendar-longitude 16.633)
 '(calendar-mark-diary-entries-flag t)
 '(calendar-view-diary-initially-flag t)
 '(calendar-week-start-day 1)
 '(column-number-mode t)
 '(compilation-error-regexp-alist
   '(absoft ada aix ant bash borland python-tracebacks-and-caml comma cucumber msft edg-1 edg-2 epc ftnchek iar ibm irix java jikes-file maven jikes-line gcc-include ruby-Test::Unit gnu lcc makepp mips-1 mips-2 msft omake oracle perl php rxp sparc-pascal-file sparc-pascal-line sparc-pascal-example sun sun-ada watcom 4bsd gcov-file gcov-header gcov-nomark gcov-called-line gcov-never-called perl--Pod::Checker perl--Test perl--Test2 perl--Test::Harness weblint nette-tester my-r-testthat))
 '(compilation-message-face 'default)
 '(compilation-read-command nil)
 '(compilation-scroll-output 'first-error)
 '(completion-ignored-extensions
   '(".cm/" ".o" "~" ".bin" ".lbin" ".so" ".a" ".ln" ".blg" ".bbl" ".elc" ".lof" ".glo" ".idx" ".lot" ".svn/" ".hg/" ".git/" ".bzr/" "CVS/" "_darcs/" "_MTN/" ".fmt" ".tfm" ".class" ".fas" ".lib" ".mem" ".x86f" ".sparcf" ".dfsl" ".pfsl" ".d64fsl" ".p64fsl" ".lx64fsl" ".lx32fsl" ".dx64fsl" ".dx32fsl" ".fx64fsl" ".fx32fsl" ".sx64fsl" ".sx32fsl" ".wx64fsl" ".wx32fsl" ".fasl" ".ufsl" ".fsl" ".dxl" ".lo" ".la" ".gmo" ".mo" ".toc" ".aux" ".cp" ".fn" ".ky" ".pg" ".tp" ".cps" ".fns" ".kys" ".pgs" ".tps" ".vrs" ".pyc" ".pyo" ".hi"))
 '(copilot-enable-predicates '((lambda nil nil)))
 '(cua-enable-cua-keys nil)
 '(cua-global-mark-cursor-color "#2aa198")
 '(cua-mode nil nil (cua-base))
 '(cua-overwrite-cursor-color "#b58900")
 '(cua-read-only-cursor-color "#859900")
 '(cursor-color "#839496")
 '(cursor-type 'box)
 '(custom-enabled-themes '(my-tango-dark))
 '(custom-safe-themes
   '("d9a89a0a87e861ffa9181b0d5c6b593f0108fee83cade906eb5433b16ed6386a" "f536c42e8d2c1139cac9533501376ecddb2f13d4cca68a12d0956db697d58730" "b467d90433db3e687056e45e1141044c2158dc4ef2ace6e5cab38b88cee5eb06" "c99e7ab141a261f47a722088d81b008d7e8114ea393e182c75223ccc31516fb2" "3e973dbe30070b42a5759aa0d83aaff8ee6a3baedd9f670a4a44a49352ebd4d2" "d7152245caee9d16a3b8c9ee5cd4ada85bbb0a743a5bfcbf598ce6bf20d40782" "a65e4c1c4e25e3a73b67fea435abd16eb3027f02de6be5e57e945f56322bb896" "3191eccbaa758e3492857051e093df4c657efb1f2fbb00634eca4979b9ad3572" "898d4445a22debe361a677b1462b85c934ffe1a71238ec71a13c07207b88b386" default))
 '(custom-theme-directory "~/.emacs.d/themes/")
 '(custom-unlispify-remove-prefixes t)
 '(custom-unlispify-tag-names nil)
 '(dash-enable-fontlock t)
 '(deadgrep-max-buffers nil)
 '(debug-on-error nil)
 '(default-input-method "english-prog")
 '(delete-by-moving-to-trash t)
 '(delete-selection-mode t)
 '(desktop-buffer-filter 'my-desktop-filter)
 '(desktop-save t)
 '(diary-display-function 'ignore)
 '(diff-font-lock-syntax nil)
 '(dired-avfs-archives '("zip" "rar" "tar" "bz2"))
 '(dired-details-hidden-string "")
 '(dired-details-hide-extra-lines nil)
 '(dired-details-hide-link-targets t)
 '(dired-details-initially-hide t)
 '(dired-du-size-format t)
 '(dired-dwim-target t)
 '(dired-filter-group-saved-groups
   '(("default"
      ("Directories"
       (directory))
      ("Documents" "documents")
      ("LaTeX"
       (extension "tex" "bib"))
      ("Org"
       (extension "org" "org_archive"))
      ("Archives" "archives")
      ("Media" "media"))
     ("pytest"
      ("Python"
       (extension . "py"))
      ("Symlinks"
       (symlink)))))
 '(dired-filter-mark-prefix "\\")
 '(dired-filter-prefix "/")
 '(dired-filter-saved-filters
   '(("media"
      (extension "mp3" "mp4" "MP3" "MP4" "avi" "mpg" "flv" "ogg" "wmv" "mkv" "mov" "wma"))
     ("elisp"
      (extension "el" "elc"))
     ("archives"
      (extension "zip" "bz2" "tgz" "txz" "gz" "xz" "z" "Z" "jar" "war" "ear" "rar" "sar" "xpi" "apk" "xz" "tar"))
     ("documents"
      (extension "doc" "docx" "odt" "pdb" "pdf" "ps" "rtf" "djvu" "epub"))))
 '(dired-guess-shell-alist-user
   '(("\\.\\(?:MP[34]\\|avi\\|flv\\|m\\(?:kv\\|ov\\|p[34g]\\)\\|ogg\\|wm[av]\\)\\'" "vlc")
     ("\\.\\(?:djvu\\|p\\(?:df\\|s\\)\\)\\'" "zathura")
     ("\\.fb2" "fbreader")
     ("\\.html\\'" "google-chrome")))
 '(dired-hide-details-hide-information-lines nil)
 '(dired-isearch-filenames t)
 '(dired-list-mpc-music-directory "~/media/music")
 '(dired-listing-switches "-alh")
 '(dired-narrow-exit-action 'dired-narrow-find-file)
 '(dired-omit-extensions
   '(".o" "~" ".bin" ".bak" ".obj" ".map" ".ico" ".pif" ".lnk" ".a" ".ln" ".blg" ".bbl" ".dll" ".drv" ".vxd" ".386" ".elc" ".lof" ".glo" ".idx" ".lot" ".svn/" ".hg/" ".git/" ".bzr/" "CVS/" "_darcs/" "_MTN/" ".fmt" ".tfm" ".class" ".fas" ".lib" ".mem" ".x86f" ".sparcf" ".dfsl" ".pfsl" ".d64fsl" ".p64fsl" ".lx64fsl" ".lx32fsl" ".dx64fsl" ".dx32fsl" ".fx64fsl" ".fx32fsl" ".sx64fsl" ".sx32fsl" ".wx64fsl" ".wx32fsl" ".fasl" ".ufsl" ".fsl" ".dxl" ".lo" ".la" ".gmo" ".mo" ".toc" ".aux" ".cp" ".fn" ".ky" ".pg" ".tp" ".vr" ".cps" ".fns" ".kys" ".pgs" ".tps" ".vrs" ".pyc" ".pyo" ".idx" ".lof" ".lot" ".glo" ".blg" ".bbl" ".cp" ".cps" ".fn" ".fns" ".ky" ".kys" ".pg" ".pgs" ".tp" ".tps" ".vr" ".vrs" ".log" ".ilg" ".out" ".ind" ".dsc" ".hi" ".synctex.gz" ".vo" ".glob" ".meta"))
 '(dired-open-extensions
   '(("exe" . "wine")
     ("docx" . "libreoffice")
     ("doc" . "libreoffice")
     ("xlsx" . "libreoffice")
     ("xls" . "libreoffice")
     ("epub" . "fbreader")))
 '(dired-open-functions
   '(dired-open-guess-shell-alist dired-open-by-extension dired-open-subdir))
 '(dired-open-query-before-exit nil)
 '(dired-open-remote-file-regex-list '("\\.html\\'"))
 '(dired-open-use-nohup t)
 '(diredfl-ignore-compressed-flag nil)
 '(display-buffer-alist
   '(((lambda
        (b _)
        (with-current-buffer b
          (eq major-mode 'swb-result-mode)))
      (display-buffer-reuse-window display-buffer-pop-up-window)
      (reusable-frames)
      (window-height . my-fit-window-to-buffer))
     (".*"
      (ignore)
      (reusable-frames . t))))
 '(display-time-24hr-format t)
 '(display-time-format "%H:%M ")
 '(display-time-string-forms
   '((if
         (and
          (not display-time-format)
          display-time-day-and-date)
         (format-time-string "%a %b %e " now)
       "")
     (propertize
      (format-time-string
       (or display-time-format
           (if display-time-24hr-format "%H:%M" "%-I:%M%p"))
       now)
      'help-echo
      (format-time-string "%a %b %e, %Y" now))
     (if mail
         (concat " "
                 (propertize display-time-mail-string 'display
                             `(when
                                  (and display-time-use-mail-icon
                                       (display-graphic-p))
                                ,@display-time-mail-icon ,@(if
                                                               (and display-time-mail-face
                                                                    (memq
                                                                     (plist-get
                                                                      (cdr display-time-mail-icon)
                                                                      :type)
                                                                     '(pbm xbm)))
                                                               (let
                                                                   ((bg
                                                                     (face-attribute display-time-mail-face :background)))
                                                                 (if
                                                                     (stringp bg)
                                                                     (list :background bg)))))
                             'face display-time-mail-face 'help-echo "You have new mail; mouse-2: Read mail" 'mouse-face 'mode-line-highlight 'local-map
                             (make-mode-line-mouse-map 'mouse-2 read-mail-command)))
       "")))
 '(docker-tramp-use-names t)
 '(echo-keystrokes 0.1)
 '(ediff-custom-diff-options "-u")
 '(ediff-diff-options "-w")
 '(ediff-merge-split-window-function 'split-window-horizontally)
 '(ediff-split-window-function 'split-window-horizontally)
 '(ediff-window-setup-function 'ediff-setup-windows-plain)
 '(editorconfig-mode t)
 '(eldoc-documentation-strategy 'eldoc-documentation-compose-eagerly)
 '(eldoc-echo-area-use-multiline-p t)
 '(eldoc-idle-delay 0.1)
 '(elpy-modules
   '(elpy-module-company elpy-module-eldoc elpy-module-pyvenv elpy-module-yasnippet elpy-module-sane-defaults))
 '(elpy-rpc-backend "jedi")
 '(elpy-rpc-python-command "python3")
 '(emmet-indentation 2)
 '(emmet-preview-default nil)
 '(enable-recursive-minibuffers t)
 '(enable-remote-dir-locals t)
 '(epg-gpg-program "gpg2")
 '(eshell-output-filter-functions
   '(eshell-handle-ansi-color eshell-postoutput-scroll-to-bottom eshell-handle-control-codes eshell-handle-ansi-color eshell-watch-for-password-prompt))
 '(eshell-prompt-function
   (lambda nil
     (concat
      (format-time-string "[%H:%M:%S]:")
      (my-abbrev-file-name
       (eshell/pwd))
      "
"
      (if
          (=
           (user-uid)
           0)
          "># " ">$ "))))
 '(eshell-prompt-regexp "^[^#$
]*
>[#$] ")
 '(eshell-skip-prompt-function 'my-eshell-skip-prompt)
 '(exec-path-from-shell-shell-name "fish")
 '(eyebrowse-mode t)
 '(fci-rule-color "#eee8d5")
 '(find-grep-options "-qE")
 '(flycheck-checker-error-threshold 2000)
 '(flycheck-disabled-checkers '(php-phplint php-phpmd emacs-lisp-checkdoc))
 '(flycheck-display-errors-function 'ignore)
 '(flycheck-emacs-lisp-load-path 'inherit)
 '(flycheck-gcc-language-standard "c++14")
 '(flycheck-ghc-args nil)
 '(flycheck-ghc-search-path
   '("/home/matus/dotfiles/xmonad/.xmonad/lib" "/home/matus/dev/haskell/mpris/src/"))
 '(flycheck-gnat-include-path '("/home/matus/dev/ada/whitakers-words/src"))
 '(flycheck-php-phpcs-executable "~/.config/composer/vendor/bin/phpcs")
 '(flycheck-phpmd-rulesets '("codesize" "controversial" "design"))
 '(flycheck-python-pycompile-executable "/usr/bin/python3")
 '(fold-dwim-outline-style-default 'nested)
 '(font-latex-math-environments
   '("display" "displaymath" "equation" "eqnarray" "gather" "multline" "align" "alignat" "xalignat" "derivation"))
 '(font-latex-quotes 'auto)
 '(font-latex-user-keyword-classes
   '(("refs"
      (("tindex" "{")
       ("sindex" "{")
       ("index" "[{")
       ("cref" "{"))
      (:inherit
       (font-lock-constant-face))
      command)))
 '(fontify-face-mode-lighter " 💡")
 '(foreground-color "#839496")
 '(free-keys-ignored-bindings
   '(("s" . "pnPNjkhl1234567890qwerb")
     ("A" . "1234567890qwer,.[]=c")))
 '(free-keys-modifiers '("" "C" "M" "C-M" "A" "H" "s"))
 '(gc-cons-threshold 10000000)
 '(geben-display-window-function 'display-buffer)
 '(global-flex-isearch-mode t)
 '(global-ligature-mode t)
 '(global-paren-face-mode t)
 '(global-subword-mode t)
 '(global-undo-tree-mode t)
 '(gnus-alias-default-identity "goljer")
 '(gnus-alias-identity-alist
   '(("goljer" "" "Matúš Goljer <matus.goljer@gmail.com>" "" nil "" "~/.emacs.d/.signature")
     ("dota" "" "Matúš Goljer <dota.keys@gmail.com>" "" nil "" "~/.emacs.d/.signature")))
 '(gnus-alias-identity-rules '(("logio-to-header" ("to" ".*logio.*" both) "logio")))
 '(god-mod-alist '((nil . "C-") ("g" . "M-") ("i" . "C-M-")))
 '(google-this-keybind "\"g\"")
 '(gud-key-prefix "")
 '(guide-key-mode t)
 '(guide-key/guide-key-sequence
   '("C-x r" "C-x 4" "C-x j" "C-x p" "C-x n" "A-x" "M-g" "M-s"
     (calc-mode "V" "v" "k" "a" "u" "j")
     (dired-mode "/" "*" "C-t" "%" "c" "\\")
     (ibuffer-mode "/" "*" "%")))
 '(guide-key/idle-delay 0.6)
 '(guide-key/popup-window-position 'bottom)
 '(guide-key/recursive-key-sequence-flag t)
 '(haskell-mode-hook '(turn-on-haskell-indentation turn-on-haskell-doc-mode) t)
 '(haskell-process-args-ghci '("-ferror-spans" "-i."))
 '(helm-buffer-max-length 50)
 '(helm-buffer-skip-remote-checking t)
 '(helm-candidate-number-limit 1000)
 '(helm-for-files-preferred-list
   '(helm-source-buffers-list helm-source-recentf helm-source-bookmarks helm-source-file-cache helm-source-files-in-current-dir))
 '(highlight-changes-colors '("#d33682" "#6c71c4"))
 '(highlight-symbol-colors
   '("#eef6d970af00" "#cef5e0cccfbc" "#fd55c91db29c" "#dadbd2f0dc18" "#e0a3de03afa1" "#f84ccba1ad99" "#d28cd9ebdf8a"))
 '(highlight-symbol-foreground-color "#586e75")
 '(highlight-tail-colors
   '(("#eee8d5" . 0)
     ("#b3c34d" . 20)
     ("#6ccec0" . 30)
     ("#74adf5" . 50)
     ("#e1af4b" . 60)
     ("#fb7640" . 70)
     ("#ff699e" . 85)
     ("#eee8d5" . 100)))
 '(highlight-thing-limit-to-defun t)
 '(history-length 3000)
 '(hl-bg-colors
   '("#e1af4b" "#fb7640" "#ff6849" "#ff699e" "#8d85e7" "#74adf5" "#6ccec0" "#b3c34d"))
 '(hl-fg-colors
   '("#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3" "#fdf6e3"))
 '(hl-paren-colors '("#2aa198" "#b58900" "#268bd2" "#6c71c4" "#859900"))
 '(ibuffer-fontification-alist
   '((10 buffer-read-only font-lock-constant-face)
     (15
      (and buffer-file-name
           (string-match ibuffer-compressed-file-name-regexp buffer-file-name))
      font-lock-doc-face)
     (20
      (string-match "^*"
                    (buffer-name))
      font-lock-keyword-face)
     (25
      (and
       (string-match "^ "
                     (buffer-name))
       (null buffer-file-name))
      italic)
     (30
      (memq major-mode ibuffer-help-buffer-modes)
      font-lock-comment-face)
     (35
      (memq major-mode
            '(dired-mode sr-mode))
      font-lock-function-name-face)))
 '(ibuffer-saved-filter-groups
   '(("default"
      ("Org"
       (mode . org-mode))
      ("emacs-config"
       (or
        (predicate let
                   ((bfn
                     (buffer-file-name
                      (current-buffer))))
                   (when bfn
                     (and
                      (string-match-p "\\.emacs\\.d" bfn)
                      (eq major-mode 'emacs-lisp-mode))))))
      ("emacs"
       (or
        (mode . emacs-lisp-mode)
        (mode . lisp-interaction-mode)
        (mode . inferior-emacs-lisp-mode)))
      ("TeX"
       (or
        (mode . tex-mode)
        (mode . plain-tex-mode)
        (mode . latex-mode)))
      ("Markdown"
       (or
        (mode . markdown-mode)
        (mode . gfm-mode)))
      ("Web"
       (or
        (mode . html-mode)
        (mode . css-mode)
        (mode . php-mode)
        (mode . js-mode)))
      ("Dired"
       (mode . dired-mode))
      ("Images"
       (or
        (mode . image-dired-display-image-mode)
        (mode . image-dired-thumbnail-mode)
        (mode . image-mode)))
      ("Tramp"
       (or
        (name . "tramp")))
      ("Programming"
       (or
        (mode . c-mode)
        (mode . perl-mode)
        (mode . python-mode)
        (mode . cc-mode))))))
 '(ibuffer-saved-filters
   '(("irc"
      ((mode . erc-mode)))
     ("dipl"
      ((filename . "_dipl")))
     ("gnus"
      ((or
        (mode . message-mode)
        (mode . mail-mode)
        (mode . gnus-group-mode)
        (mode . gnus-summary-mode)
        (mode . gnus-article-mode))))
     ("programming"
      ((or
        (mode . emacs-lisp-mode)
        (mode . cperl-mode)
        (mode . c-mode)
        (mode . java-mode)
        (mode . idl-mode)
        (mode . lisp-mode))))))
 '(ibuffer-show-empty-filter-groups nil)
 '(ibuffer-truncate-lines nil)
 '(ido-cr+-max-items 300000)
 '(ido-decorations
   '("
-> " "" "
   " "
   ..." "[" "]" " [No match]" " [Matched]" " [Not readable]" " [Too big]" " [Confirm]"))
 '(ido-ubiquitous-allow-on-functional-collection t)
 '(ido-ubiquitous-command-overrides
   '((disable exact "execute-extended-command")
     (enable prefix "wl-")
     (enable-old prefix "Info-")
     (enable exact "webjump")
     (enable regexp "\\`\\(find\\|load\\|locate\\)-library\\'")
     (disable prefix "tmm-")
     (enable regexp "\\`\\(load\\|enable\\|disable\\|describe\\|custom-theme-visit\\)-theme\\'")
     (enable-old prefix "bbdb-")
     (enable-old exact "where-is")
     (disable exact "todo-add-category")
     (enable exact "find-tag")
     (enable prefix "etags-select-")))
 '(ido-ubiquitous-default-state 'enable)
 '(ido-ubiquitous-function-overrides
   '((disable exact "read-file-name")
     (disable exact "read-file-name-internal")
     (disable exact "read-buffer")
     (disable exact "gnus-emacs-completing-read")
     (disable exact "gnus-iswitchb-completing-read")
     (disable exact "grep-read-files")
     (disable exact "magit-builtin-completing-read")
     (enable exact "bookmark-completing-read")
     (enable-old exact "webjump-read-choice")
     (enable-old exact "webjump-read-url-choice")
     (disable exact "isearchp-read-unicode-char")
     (enable exact "read-char-by-name")
     (disable exact "Info-read-node-name")
     (disable exact "tmm-menubar")
     (enable exact "imenu--completion-buffer")
     (enable-old exact "auto-insert")
     (enable exact "project--completing-read-strict")
     (enable-old exact "legalese-elisp-keyword")))
 '(imenu-auto-rescan t)
 '(indent-tabs-mode nil)
 '(indicate-empty-lines nil)
 '(inferior-ess-r-program "R")
 '(inhibit-startup-screen t)
 '(initial-buffer-choice 'my-startup-screen)
 '(initial-major-mode 'fundamental-mode)
 '(ispell-program-name "hunspell")
 '(ivy-height 30)
 '(js2-strict-missing-semi-warning nil)
 '(js2-strict-trailing-comma-warning nil)
 '(jump-char-forward-key "m")
 '(keyfreq-autosave-mode t)
 '(keyfreq-mode t)
 '(ledger-copy-transaction-insert-blank-line-after t)
 '(ledger-reconcile-default-commodity "Kc")
 '(ledger-report-format-specifiers
   '(("ledger-file" . ledger-report-ledger-file-format-specifier)
     ("binary" . ledger-report-binary-format-specifier)
     ("payee" . ledger-report-payee-format-specifier)
     ("account" . ledger-report-account-format-specifier)
     ("month" . ledger-report-month-format-specifier)
     ("tagname" . ledger-report-tagname-format-specifier)
     ("tagvalue" . ledger-report-tagvalue-format-specifier)
     ("period" . my-ledger-report-period-format-specifier)))
 '(ledger-reports
   '(("portfolio" "ledger -f %(ledger-file) bal --group-by commodity Assets:Broker -X Kc")
     ("expenses" "ledger -f %(ledger-file) -p \"this month\" -X Kc --monthly --real reg ^expenses")
     ("expenses-year" "ledger -f %(ledger-file) -p \"this year\" -X Kc --monthly --real reg ^expenses")
     ("cash-flow-monthly" "ledger -f %(ledger-file) -p \"this month\" bal -X Kc ^income ^expenses")
     ("cash-flow" "ledger -f %(ledger-file) bal -X Kc ^income ^expenses ^gifts")
     ("budget" "ledger -f %(ledger-file) bal -X Kc '^Assets:Checking:Air Bank'")
     ("expenses-budget" "ledger -f %(ledger-file) -p \"this month\" -X Kc --monthly reg 'Assets:Checking:Air Bank:Budget:Expenses'")
     ("expenses-budget-year" "ledger -f %(ledger-file) -p %(period) -X Kc --monthly reg 'Assets:Checking:Air Bank:Budget:Expenses'")
     ("equity" "ledger -f %(ledger-file) bal -X Kc ^assets ^liabilities")
     ("bal" "ledger -f %(ledger-file) -X Kc bal")
     ("reg" "ledger -f %(ledger-file) reg")
     ("payee" "ledger -f %(ledger-file) reg @%(payee)")
     ("reg-account" "ledger -f %(ledger-file) reg %(account)")
     ("bal-account" "ledger -f %(ledger-file) -X Kc bal %(account)")
     ("bal-saving" "ledger -f %(ledger-file) -X Kc --real bal 'assets:saving'")
     ("envelopes" "ledger -f %(ledger-file) bal envelopes '/saving:.*:capital/' 'assets:saving:air bank' -X Kc")))
 '(legalese-date-format 'ordinal)
 '(legalese-default-copyright "Matúš Goljer")
 '(legalese-templates
   '((emacs-lisp-mode
      (nil ";;; " legalese-file-name " --- " _ " -*- lexical-binding: t -*-
" "
" ";; Copyright (C) " legalese-year " " legalese-copyright "
" "
" ";; Author: " legalese-author "
" ";; Maintainer: " legalese-author "
" ";; Version: 0.0.1
" ";; Created: " legalese-date "
" ";; Package-requires: ((dash \"2.17.0\"))
" ";; Keywords: "
((legalese-elisp-keyword)
 str ", ")
& -2 "
" "
" @
'(legalese-license)
@ "
" ";;; Commentary:
" "
" ";;; Code:
" "
" "
" "(provide '" legalese-file ")
" ";;; " legalese-file-name " ends here
"))))
 '(line-number-mode t)
 '(log-edit-hook
   '(log-edit-insert-cvs-template log-edit-insert-changelog log-edit-show-files))
 '(look-show-subdirs t)
 '(ls-lisp-dirs-first t)
 '(ls-lisp-use-insert-directory-program nil)
 '(ls-lisp-use-localized-time-format t)
 '(ls-lisp-use-string-collate nil)
 '(ls-lisp-verbosity '(uid gid))
 '(lsp-clients-r-server-command '("lsp-r"))
 '(lsp-eldoc-render-all t)
 '(lsp-enable-completion-at-point nil)
 '(lsp-headerline-breadcrumb-segments '(symbols))
 '(lsp-inhibit-message t)
 '(lsp-keymap-prefix "s-o")
 '(lsp-modeline-code-actions-segments nil)
 '(lsp-ui-doc-border "#586e75")
 '(magit-auto-revert-mode nil)
 '(magit-bury-buffer-function 'quit-window)
 '(magit-commit-arguments nil)
 '(magit-completing-read-function 'ido-completing-read)
 '(magit-diff-arguments '("--no-ext-diff" "--stat"))
 '(magit-diff-refine-hunk 'all)
 '(magit-log-arguments '("--graph" "--color" "--decorate"))
 '(magit-push-always-verify nil)
 '(magit-status-sections-hook
   '(magit-insert-status-headers magit-insert-merge-log magit-insert-rebase-sequence magit-insert-am-sequence magit-insert-sequencer-sequence magit-insert-bisect-output magit-insert-bisect-rest magit-insert-bisect-log magit-insert-untracked-files magit-insert-unstaged-changes magit-insert-staged-changes magit-insert-stashes magit-insert-unpushed-to-pushremote magit-insert-unpushed-to-upstream magit-insert-unpulled-from-pushremote magit-insert-unpulled-from-upstream magit-insert-modules))
 '(magit-tag-arguments '("--sort=v:refname"))
 '(mail-envelope-from 'header)
 '(mail-specify-envelope-from t)
 '(make-pointer-invisible t)
 '(markdown-fontify-code-blocks-natively t)
 '(markdown-link-space-sub-char "-")
 '(max-lisp-eval-depth 100000)
 '(max-specpdl-size 10000)
 '(message-forward-as-mime nil)
 '(message-kill-buffer-on-exit t)
 '(message-log-max 10000)
 '(message-send-mail-function 'smtpmail-send-it)
 '(message-sendmail-envelope-from 'header)
 '(mis-bindings-alist nil)
 '(mis-make-command "make -j2")
 '(mis-recipes-directory "~/.emacs.d/elpa/make-it-so-20141203.811/recipes/")
 '(mm-inline-large-images 'resize)
 '(mocha-reporter "spec")
 '(mouse-highlight nil)
 '(mouse-wheel-progressive-speed nil)
 '(my-org-idle-task "bed6e54e-095d-477e-92c0-9a4e6f345284")
 '(notmuch-archive-tags '("-inbox" "-unread" "+archived"))
 '(notmuch-fcc-dirs nil)
 '(notmuch-hello-sections
   '(notmuch-hello-insert-header notmuch-hello-insert-search notmuch-hello-insert-recent-searches notmuch-hello-insert-alltags notmuch-hello-insert-footer))
 '(notmuch-search-oldest-first nil)
 '(notmuch-show-logo nil)
 '(nrepl-message-colors
   '("#dc322f" "#cb4b16" "#b58900" "#5b7300" "#b3c34d" "#0061a8" "#2aa198" "#d33682" "#6c71c4"))
 '(nvm-dir "/home/matus/.local/share/nvm")
 '(omnisharp-server-executable-path "/home/matus/sources/omnisharp/run")
 '(org-M-RET-may-split-line nil)
 '(org-adapt-indentation nil)
 '(org-agenda-clock-consistency-checks
   '(:max-duration "10:00" :min-duration 0 :max-gap "0:20" :gap-ok-around
     ("4:00")
     :default-face
     ((:foreground "Red"))
     :overlap-face nil :gap-face nil :no-end-time-face nil :long-face nil :short-face nil))
 '(org-agenda-clockreport-parameter-plist '(:link t :maxlevel 3 :tcolumns 1))
 '(org-agenda-compact-blocks t)
 '(org-agenda-deadline-faces
   '((1.0 . org-imminent-deadline)
     (0.8 . org-upcoming-deadline)
     (0.0 . org-upcoming-distant-deadline)))
 '(org-agenda-files "~/org/.files")
 '(org-agenda-finalize-hook
   '(my-org-agenda-remove-empty-lists my-org-agenda-to-appt org-clock-budget-insert-into-agenda))
 '(org-agenda-include-diary t)
 '(org-agenda-prefix-format
   '((agenda . " %i %-12:c%?-12t% s%5e")
     (todo . " %i %-12:c%5e")
     (tags . " %i %-12:c%5e")
     (search . " %i %-12:c%5e")))
 '(org-agenda-restriction-lock-highlight-subtree nil)
 '(org-agenda-skip-deadline-if-done t)
 '(org-agenda-skip-function-global 'my-org-global-skip-function)
 '(org-agenda-skip-scheduled-if-done t)
 '(org-agenda-skip-timestamp-if-done t)
 '(org-agenda-sorting-strategy
   '((agenda time-up deadline-up priority-down category-keep)
     (todo priority-down category-keep)
     (tags deadline-up priority-down category-keep)
     (search category-keep)))
 '(org-agenda-span 'day)
 '(org-agenda-start-with-clockreport-mode nil)
 '(org-agenda-sticky t)
 '(org-agenda-tags-column -140)
 '(org-agenda-tags-todo-honor-ignore-options t)
 '(org-agenda-time-grid
   '((daily weekly today require-timed remove-match)
     (800 1000 1200 1400 1600 1800 2000 2200)
     "......" "----------------"))
 '(org-agenda-todo-ignore-scheduled 'all)
 '(org-agenda-window-setup 'current-window)
 '(org-attach-auto-tag "ATTACH")
 '(org-attach-commit nil)
 '(org-attach-directory "/home/matus/data/org-attach/")
 '(org-attach-git-annex-cutoff 1)
 '(org-attach-id-dir "/home/matus/data/org-attach/")
 '(org-babel-load-languages
   '((emacs-lisp . t)
     (plantuml . t)
     (shell . t)
     (ledger . t)
     (gnuplot . t)
     (awk . t)
     (sql . t)
     (js . t)
     (ruby . t)
     (R . t)
     (dot . t)
     (python . t)))
 '(org-clock-budget-default-sort-column '("BUDGET_WEEK" ratio desc))
 '(org-clock-budget-intervals
   '(("BUDGET_YEAR" org-clock-budget-interval-this-year)
     ("BUDGET_MONTH" org-clock-budget-interval-this-month)
     ("BUDGET_WEEK" org-clock-budget-interval-this-week)))
 '(org-clock-budget-ratio-faces
   '((1.0 font-lock-warning-face)
     (0.9 font-lock-variable-name-face)
     (0.0 font-lock-keyword-face)))
 '(org-clock-display-default-range 'untilnow)
 '(org-clock-history-length 35)
 '(org-clock-in-resume t)
 '(org-clock-in-switch-to-state 'my-org-clock-in-to-next)
 '(org-clock-into-drawer "CLOCK")
 '(org-clock-mode-line-total 'today)
 '(org-clock-out-remove-zero-time-clocks t)
 '(org-clock-out-when-done nil)
 '(org-clock-persist t)
 '(org-clock-persist-query-resume nil)
 '(org-clock-report-include-clocking-task t)
 '(org-columns-default-format
   "%50ITEM(Task) %TODO(Todo) %SCHEDULED(Scheduled) %DEADLINE(Deadline) %TAGS(Tags) %CLOCKSUM(Clock) %Effort(Effort) %BUDGET_YEAR(B/Y) %BUDGET_WEEK(B/W)")
 '(org-complete-tags-always-offer-all-agenda-tags t)
 '(org-completion-use-ido t)
 '(org-confirm-babel-evaluate nil)
 '(org-contacts-files '("~/org/contacts.org"))
 '(org-cycle-emulate-tab nil)
 '(org-deadline-warning-days 30)
 '(org-default-notes-file "~/org/refile.org")
 '(org-drill-add-random-noise-to-intervals-p t)
 '(org-drill-adjust-intervals-for-early-and-late-repetitions-p t)
 '(org-drill-card-type-alist
   '((nil org-drill-present-simple-card nil t)
     ("simple" org-drill-present-simple-card)
     ("twosided" org-drill-present-two-sided-card nil t)
     ("multisided" org-drill-present-multi-sided-card nil t)
     ("hide1cloze" org-drill-present-multicloze-hide1)
     ("hide2cloze" org-drill-present-multicloze-hide2)
     ("show1cloze" org-drill-present-multicloze-show1)
     ("show2cloze" org-drill-present-multicloze-show2)
     ("multicloze" org-drill-present-multicloze-hide1)
     ("hidefirst" org-drill-present-multicloze-hide-first)
     ("hidelast" org-drill-present-multicloze-hide-last)
     ("hide1_firstmore" org-drill-present-multicloze-hide1-firstmore)
     ("show1_lastmore" org-drill-present-multicloze-show1-lastmore)
     ("show1_firstless" org-drill-present-multicloze-show1-firstless)
     ("conjugate" org-drill-present-verb-conjugation org-drill-show-answer-verb-conjugation)
     ("decline_noun" org-drill-present-noun-declension org-drill-show-answer-noun-declension)
     ("spanish_verb" org-drill-present-spanish-verb)
     ("translate_number" org-drill-present-translate-number)
     ("twosidednocloze" org-drill-present-two-sided-card-no-cloze nil t)))
 '(org-drill-forgetting-index 50)
 '(org-drill-item-count-includes-failed-items-p t)
 '(org-drill-learn-fraction 0.55)
 '(org-drill-leech-method 'warn)
 '(org-drill-maximum-duration nil)
 '(org-drill-maximum-items-per-session 40)
 '(org-drill-optimal-factor-matrix
   '((29
      (1.3 . 1.115)
      (1.1600000000000001 . 1.072))
     (28
      (1.1600000000000001 . 1.072)
      (1.3 . 1.115))
     (27
      (1.3 . 1.115)
      (1.1600000000000001 . 1.072))
     (26
      (1.1600000000000001 . 1.072)
      (1.3 . 1.115))
     (25
      (0.98 . 1.029)
      (1.1600000000000001 . 1.072)
      (1.3 . 1.115))
     (24
      (0.98 . 1.029)
      (1.1600000000000001 . 1.072)
      (1.3 . 1.115))
     (23
      (0.98 . 1.029)
      (1.1600000000000001 . 1.072)
      (1.3 . 1.115))
     (22
      (0.98 . 1.029)
      (1.3 . 1.115)
      (1.1600000000000001 . 1.072))
     (21
      (1.26 . 1.346)
      (0.98 . 1.029)
      (1.1600000000000001 . 1.115)
      (1.3 . 1.115))
     (20
      (0.98 . 1.029)
      (1.4 . 1.4)
      (1.26 . 1.346)
      (1.3 . 1.115)
      (1.1600000000000001 . 1.072))
     (19
      (1.26 . 1.346)
      (1.4000000000000001 . 1.158)
      (0.98 . 1.029)
      (1.1600000000000001 . 1.03)
      (1.3 . 1.115))
     (18
      (0.98 . 1.029)
      (1.4 . 1.4)
      (1.26 . 1.346)
      (1.3 . 1.115)
      (1.1600000000000001 . 1.072))
     (17
      (1.4000000000000001 . 1.158)
      (1.26 . 1.346)
      (1.4 . 1.4)
      (0.98 . 1.029)
      (1.1600000000000001 . 1.072)
      (1.3 . 1.115))
     (16
      (0.98 . 1.029)
      (1.26 . 1.346)
      (1.4000000000000001 . 1.205)
      (1.1600000000000001 . 1.072)
      (1.3 . 1.115))
     (15
      (1.26 . 1.346)
      (0.98 . 1.029)
      (1.4000000000000001 . 1.158)
      (1.1600000000000001 . 1.072)
      (1.3 . 1.115))
     (14
      (0.98 . 1.029)
      (1.4000000000000001 . 1.158)
      (1.26 . 1.346)
      (1.2200000000000002 . 1.308)
      (1.1600000000000001 . 1.03)
      (1.3 . 1.115))
     (13
      (0.76 . 0.986)
      (1.4000000000000001 . 1.205)
      (1.36 . 1.442)
      (1.1600000000000001 . 1.115)
      (0.98 . 1.071)
      (1.3 . 1.16)
      (1.26 . 1.346))
     (12
      (0.98 . 1.029)
      (1.26 . 1.346)
      (1.2200000000000002 . 1.308)
      (1.5 . 1.454)
      (1.1600000000000001 . 1.072)
      (1.3 . 1.115)
      (1.4000000000000001 . 1.205))
     (11
      (1.36 . 1.442)
      (1.2200000000000002 . 1.308)
      (1.26 . 1.346)
      (1.4000000000000001 . 1.158)
      (0.98 . 1.029)
      (1.1600000000000001 . 1.115)
      (1.3 . 1.115))
     (10
      (1.0799999999999998 . 1.292)
      (1.1199999999999999 . 1.329)
      (1.24 . 1.327)
      (1.4000000000000001 . 1.325)
      (1.5 . 1.454)
      (0.98 . 1.071)
      (1.36 . 1.442)
      (1.4 . 1.4)
      (1.26 . 1.346)
      (1.3 . 1.115)
      (1.1600000000000001 . 1.115))
     (9
      (1.52 . 1.596)
      (1.02 . 1.313)
      (1.58 . 1.654)
      (1.4800000000000002 . 1.558)
      (1.48 . 1.433)
      (1.3800000000000001 . 1.461)
      (1.2 . 1.403)
      (1.66 . 1.66)
      (1.34 . 1.423)
      (1.2000000000000002 . 1.368)
      (1.38 . 1.38)
      (1.4400000000000002 . 1.519)
      (1.2200000000000002 . 1.308)
      (1.24 . 1.327)
      (1.4 . 1.4)
      (1.26 . 1.346)
      (0.76 . 0.986)
      (0.98 . 1.029)
      (1.5 . 1.454)
      (1.4000000000000001 . 1.158)
      (1.1600000000000001 . 1.03)
      (1.3 . 1.16))
     (8
      (1.5799999999999998 . 1.754)
      (1.3399999999999999 . 1.532)
      (1.6800000000000002 . 1.75)
      (1.76 . 1.827)
      (1.9 . 1.9)
      (1.86 . 1.923)
      (1.4400000000000002 . 1.59)
      (1.02 . 1.272)
      (1.16 . 1.323)
      (1.8 . 1.865)
      (1.2 . 1.473)
      (1.6600000000000001 . 1.793)
      (1.7200000000000002 . 1.682)
      (1.44 . 1.44)
      (1.4800000000000002 . 1.689)
      (1.66 . 1.66)
      (1.52 . 1.596)
      (1.62 . 1.757)
      (1.58 . 1.654)
      (1.38 . 1.38)
      (1.48 . 1.433)
      (1.36 . 1.36)
      (1.0599999999999998 . 1.274)
      (1.2000000000000002 . 1.325)
      (1.34 . 1.378)
      (1.3800000000000001 . 1.535)
      (1.24 . 1.327)
      (1.26 . 1.527)
      (1.4000000000000001 . 1.321)
      (1.4 . 1.4)
      (1.1600000000000001 . 1.223)
      (1.3 . 1.221)
      (0.98 . 1.174))
     (7
      (1.9999999999999998 . 2.141)
      (1.4 . 1.4)
      (1.5 . 1.454)
      (1.5999999999999999 . 1.772)
      (2.22 . 2.22)
      (1.44 . 1.686)
      (2.56 . 2.56)
      (2.38 . 2.417)
      (1.9599999999999997 . 2.148)
      (2.28 . 2.327)
      (2.62 . 2.617)
      (1.78 . 1.938)
      (2.42 . 2.42)
      (2.14 . 2.177)
      (2.2800000000000002 . 2.264)
      (1.6199999999999999 . 1.791)
      (2.2399999999999998 . 2.288)
      (1.5799999999999998 . 1.754)
      (2.1799999999999997 . 2.231)
      (1.7200000000000002 . 1.935)
      (2.24 . 2.222)
      (1.9400000000000002 . 2.053)
      (2.18 . 2.18)
      (2.08 . 2.135)
      (2.32 . 2.32)
      (1.72 . 1.935)
      (1.9 . 1.9)
      (1.86 . 2.012)
      (2.04 . 2.096)
      (1.82 . 1.885)
      (1.0799999999999998 . 1.292)
      (1.94 . 1.94)
      (2.0 . 2.093)
      (1.9000000000000001 . 2.015)
      (2.1399999999999997 . 2.237)
      (1.4400000000000002 . 1.741)
      (1.3399999999999999 . 1.532)
      (1.8 . 1.865)
      (1.58 . 1.811)
      (1.36 . 1.442)
      (1.0599999999999998 . 1.274)
      (1.76 . 1.724)
      (1.6600000000000001 . 1.793)
      (1.66 . 1.66)
      (1.2000000000000002 . 1.591)
      (1.2 . 1.473)
      (1.62 . 1.657)
      (1.48 . 1.721)
      (1.34 . 1.655)
      (1.52 . 1.596)
      (1.26 . 1.346)
      (1.3800000000000001 . 1.535)
      (1.4800000000000002 . 1.689)
      (1.38 . 1.38)
      (1.4000000000000001 . 1.112)
      (0.98 . 1.178)
      (1.24 . 1.327)
      (1.1600000000000001 . 1.03)
      (1.3 . 1.071))
     (6
      (2.2 . 2.392)
      (3.0 . 3.02)
      (2.7600000000000002 . 2.8)
      (3.1 . 3.116)
      (2.9 . 2.908)
      (2.86 . 2.904)
      (2.0999999999999996 . 2.304)
      (2.1999999999999997 . 2.25)
      (2.6199999999999997 . 2.688)
      (2.06 . 2.115)
      (2.48 . 2.48)
      (2.24 . 2.299)
      (1.82 . 1.885)
      (1.9200000000000002 . 1.981)
      (2.62 . 2.692)
      (2.7 . 2.7)
      (1.0799999999999998 . 1.292)
      (2.8000000000000003 . 2.804)
      (2.76 . 2.796)
      (2.8 . 2.8)
      (2.6599999999999997 . 2.692)
      (1.9600000000000002 . 2.09)
      (2.1 . 2.174)
      (2.66 . 2.696)
      (2.36 . 2.36)
      (2.2199999999999998 . 2.269)
      (2.6 . 2.6)
      (1.9 . 1.9)
      (1.4 . 1.4)
      (2.46 . 2.5)
      (2.56 . 2.596)
      (2.52 . 2.592)
      (0.8399999999999999 . 1.221)
      (2.0 . 1.973)
      (2.42 . 2.496)
      (2.28 . 2.4)
      (2.38 . 2.492)
      (2.1399999999999997 . 2.308)
      (1.9999999999999998 . 2.219)
      (2.3200000000000003 . 2.305)
      (2.1799999999999997 . 2.311)
      (1.6199999999999999 . 1.791)
      (1.2000000000000002 . 1.325)
      (1.5 . 1.5)
      (1.86 . 2.046)
      (2.22 . 2.22)
      (1.7200000000000002 . 1.968)
      (1.3599999999999999 . 1.681)
      (1.58 . 1.787)
      (1.72 . 1.935)
      (1.4800000000000002 . 1.594)
      (2.18 . 2.217)
      (2.32 . 2.404)
      (1.5799999999999998 . 1.754)
      (1.26 . 1.346)
      (2.04 . 2.132)
      (1.34 . 1.378)
      (1.9400000000000002 . 2.053)
      (2.08 . 2.135)
      (1.3399999999999999 . 1.532)
      (2.14 . 2.214)
      (1.94 . 1.94)
      (1.4400000000000002 . 1.519)
      (1.66 . 1.66)
      (1.4000000000000001 . 1.205)
      (2.2800000000000002 . 2.302)
      (1.2 . 1.473)
      (1.8 . 1.865)
      (1.48 . 1.433)
      (1.9000000000000001 . 2.05)
      (1.76 . 1.971)
      (1.6600000000000001 . 1.793)
      (0.98 . 1.029)
      (1.0599999999999998 . 1.274)
      (1.62 . 1.658)
      (1.52 . 1.596)
      (1.38 . 1.38)
      (1.24 . 1.327)
      (0.76 . 0.986)
      (1.3 . 1.115)
      (1.3800000000000001 . 1.535)
      (1.1600000000000001 . 1.03))
     (5
      (0.76 . 1.129)
      (2.38 . 2.488)
      (2.44 . 2.581)
      (2.86 . 2.86)
      (3.06 . 3.074)
      (2.24 . 2.392)
      (2.72 . 2.72)
      (2.06 . 2.035)
      (2.34 . 2.385)
      (2.0999999999999996 . 2.3)
      (1.9600000000000002 . 2.126)
      (2.2 . 2.389)
      (2.58 . 2.684)
      (2.1 . 2.154)
      (1.2000000000000002 . 1.591)
      (1.16 . 1.323)
      (1.9599999999999997 . 2.212)
      (1.5799999999999998 . 1.754)
      (1.9 . 1.9)
      (1.4400000000000002 . 1.59)
      (2.8 . 2.8)
      (1.44 . 1.686)
      (2.9 . 2.908)
      (2.48 . 2.48)
      (1.66 . 1.66)
      (1.5 . 1.5)
      (1.34 . 1.655)
      (2.4799999999999995 . 2.584)
      (3.0 . 3.02)
      (1.4 . 1.716)
      (2.76 . 2.796)
      (2.0 . 2.129)
      (2.1399999999999997 . 2.304)
      (1.26 . 1.65)
      (2.14 . 2.214)
      (2.7600000000000002 . 2.796)
      (2.6599999999999997 . 2.692)
      (1.4000000000000001 . 1.321)
      (1.9999999999999998 . 2.215)
      (2.7 . 2.696)
      (1.7200000000000002 . 1.968)
      (1.02 . 1.237)
      (1.86 . 2.047)
      (2.52 . 2.588)
      (2.8000000000000003 . 2.8)
      (2.28 . 2.396)
      (1.38 . 1.38)
      (2.66 . 2.692)
      (1.62 . 1.657)
      (2.42 . 2.492)
      (1.4800000000000002 . 1.822)
      (1.1199999999999999 . 1.468)
      (2.6 . 2.596)
      (2.46 . 2.496)
      (2.36 . 2.404)
      (1.72 . 1.917)
      (0.98 . 1.174)
      (2.2199999999999998 . 2.311)
      (2.2800000000000002 . 2.302)
      (2.56 . 2.592)
      (1.9000000000000001 . 2.049)
      (2.3200000000000003 . 2.305)
      (1.58 . 1.843)
      (1.3399999999999999 . 1.532)
      (1.54 . 1.615)
      (2.18 . 2.217)
      (2.04 . 2.132)
      (2.22 . 2.22)
      (2.32 . 2.4)
      (1.94 . 1.94)
      (1.6199999999999999 . 1.791)
      (1.0599999999999998 . 1.274)
      (1.9400000000000002 . 2.053)
      (1.2 . 1.473)
      (2.1799999999999997 . 2.308)
      (1.76 . 1.827)
      (1.48 . 1.721)
      (2.08 . 2.135)
      (1.1600000000000001 . 1.223)
      (1.24 . 1.327)
      (1.6600000000000001 . 1.793)
      (1.3 . 1.323)
      (1.8 . 1.865)
      (1.3800000000000001 . 1.535)
      (1.52 . 1.596))
     (4
      (1.36 . 1.398)
      (1.68 . 1.68)
      (1.72 . 1.72)
      (1.16 . 1.588)
      (2.02 . 2.293)
      (2.86 . 2.866)
      (2.58 . 2.615)
      (2.96 . 2.96)
      (1.9600000000000002 . 2.019)
      (1.5799999999999998 . 1.754)
      (2.14 . 2.214)
      (2.7199999999999998 . 2.75)
      (0.94 . 1.522)
      (1.86 . 2.047)
      (1.58 . 1.654)
      (2.1999999999999997 . 2.25)
      (1.9 . 1.9)
      (1.5 . 1.454)
      (2.28 . 2.396)
      (2.4799999999999995 . 2.584)
      (1.4800000000000002 . 1.822)
      (1.4000000000000001 . 1.586)
      (1.2000000000000002 . 1.591)
      (1.54 . 1.888)
      (2.2 . 2.389)
      (1.34 . 1.655)
      (2.52 . 2.588)
      (2.48 . 2.519)
      (2.8 . 2.8)
      (2.1399999999999997 . 2.304)
      (2.2800000000000002 . 2.396)
      (1.38 . 1.38)
      (2.0 . 2.129)
      (1.62 . 1.895)
      (1.66 . 1.66)
      (2.24 . 2.392)
      (0.98 . 1.466)
      (2.6599999999999997 . 2.692)
      (1.26 . 1.346)
      (2.9 . 2.908)
      (0.76 . 0.986)
      (1.9999999999999998 . 2.215)
      (1.0599999999999998 . 1.274)
      (1.3399999999999999 . 1.532)
      (2.8000000000000003 . 2.8)
      (2.7 . 2.696)
      (1.1600000000000001 . 1.527)
      (2.66 . 2.692)
      (2.42 . 2.492)
      (2.56 . 2.592)
      (1.3 . 1.276)
      (1.7200000000000002 . 1.968)
      (1.94 . 1.94)
      (2.32 . 2.4)
      (2.6 . 2.596)
      (2.04 . 2.132)
      (2.36 . 2.404)
      (2.5 . 2.5)
      (1.3800000000000001 . 1.535)
      (1.24 . 1.327)
      (1.2 . 1.473)
      (2.46 . 2.496)
      (2.1799999999999997 . 2.308)
      (2.2199999999999998 . 2.311)
      (1.48 . 1.721)
      (2.18 . 2.217)
      (1.52 . 1.596)
      (2.22 . 2.22)
      (1.9000000000000001 . 2.049)
      (1.6600000000000001 . 1.793)
      (2.08 . 2.135)
      (1.6199999999999999 . 1.791)
      (2.3200000000000003 . 2.305)
      (1.8 . 1.865)
      (1.76 . 1.971)
      (1.9400000000000002 . 2.053))
     (3
      (1.5 . 1.577)
      (1.26 . 1.346)
      (1.16 . 1.588)
      (0.76 . 1.297)
      (1.6800000000000002 . 1.964)
      (1.54 . 1.888)
      (1.9 . 1.9)
      (2.2399999999999998 . 2.277)
      (2.7600000000000002 . 2.796)
      (2.72 . 2.791)
      (2.96 . 2.976)
      (2.1 . 2.154)
      (1.5799999999999998 . 1.754)
      (1.38 . 1.38)
      (2.62 . 2.688)
      (2.86 . 2.866)
      (2.0 . 1.973)
      (1.7200000000000002 . 1.824)
      (1.4 . 1.4)
      (2.3400000000000003 . 2.326)
      (1.4400000000000002 . 1.519)
      (1.2000000000000002 . 1.591)
      (1.62 . 1.757)
      (1.44 . 1.819)
      (1.34 . 1.655)
      (2.66 . 2.692)
      (1.66 . 1.66)
      (1.4000000000000001 . 1.522)
      (2.52 . 2.588)
      (1.4800000000000002 . 1.593)
      (2.38 . 2.368)
      (2.42 . 2.492)
      (1.72 . 2.048)
      (2.14 . 2.304)
      (2.2800000000000002 . 2.302)
      (0.98 . 1.178)
      (1.1600000000000001 . 1.468)
      (1.2 . 1.473)
      (1.3 . 1.527)
      (1.0599999999999998 . 1.274)
      (1.24 . 1.327)
      (2.8000000000000003 . 2.8)
      (1.3399999999999999 . 1.532)
      (1.3800000000000001 . 1.535)
      (2.1799999999999997 . 2.308)
      (1.86 . 1.897)
      (1.52 . 1.596)
      (2.1399999999999997 . 2.192)
      (2.04 . 2.219)
      (1.6600000000000001 . 1.793)
      (1.48 . 1.433)
      (1.94 . 1.94)
      (1.6199999999999999 . 1.791)
      (1.8 . 1.865)
      (2.18 . 2.217)
      (2.7 . 2.696)
      (2.6 . 2.596)
      (2.56 . 2.592)
      (1.76 . 1.827)
      (2.5 . 2.5)
      (2.3200000000000003 . 2.305)
      (1.9400000000000002 . 2.053)
      (2.22 . 2.22)
      (2.36 . 2.404)
      (2.32 . 2.4)
      (2.46 . 2.496)
      (2.2199999999999998 . 2.311)
      (1.9000000000000001 . 2.049)
      (2.08 . 2.135))
     (2
      (1.6400000000000001 . 1.711)
      (0.76 . 1.084)
      (1.82 . 1.885)
      (2.1399999999999997 . 2.227)
      (1.54 . 1.888)
      (2.38 . 2.405)
      (2.66 . 2.66)
      (2.62 . 2.656)
      (1.9 . 1.9)
      (2.86 . 2.866)
      (1.4800000000000002 . 1.593)
      (2.24 . 2.222)
      (1.2000000000000002 . 1.591)
      (2.52 . 2.558)
      (1.44 . 1.686)
      (2.7600000000000002 . 2.762)
      (1.4000000000000001 . 1.272)
      (1.72 . 1.968)
      (1.9999999999999998 . 2.141)
      (1.58 . 1.892)
      (1.34 . 1.655)
      (2.2399999999999998 . 2.312)
      (1.66 . 1.66)
      (2.0 . 2.058)
      (2.42 . 2.409)
      (1.9599999999999997 . 2.148)
      (1.86 . 2.047)
      (2.0999999999999996 . 2.234)
      (1.62 . 1.658)
      (1.5799999999999998 . 1.754)
      (1.8199999999999998 . 2.126)
      (2.28 . 2.316)
      (2.56 . 2.592)
      (1.38 . 1.38)
      (1.1600000000000001 . 1.072)
      (1.2 . 1.473)
      (1.26 . 1.65)
      (1.0599999999999998 . 1.274)
      (1.3 . 1.115)
      (0.98 . 1.029)
      (1.24 . 1.327)
      (1.1199999999999999 . 1.468)
      (1.6800000000000002 . 1.964)
      (2.32 . 2.401)
      (1.3800000000000001 . 1.535)
      (1.52 . 1.596)
      (1.3399999999999999 . 1.532)
      (1.6600000000000001 . 1.793)
      (1.94 . 1.94)
      (2.2800000000000002 . 2.396)
      (2.3200000000000003 . 2.305)
      (1.48 . 1.721)
      (1.6199999999999999 . 1.791)
      (2.22 . 2.22)
      (1.8 . 1.865)
      (1.4 . 1.716)
      (2.18 . 2.217)
      (1.9400000000000002 . 2.053)
      (1.76 . 1.971)
      (2.08 . 2.135)
      (1.9000000000000001 . 2.049)
      (2.7 . 2.696)
      (2.1799999999999997 . 2.308)
      (2.5 . 2.5)
      (2.46 . 2.497)
      (2.2199999999999998 . 2.311)
      (2.04 . 2.132)
      (2.6 . 2.596)
      (2.36 . 2.404))
     (1
      (1.5799999999999998 . 3.692)
      (1.4400000000000002 . 3.846)
      (1.78 . 3.846)
      (2.0999999999999996 . 3.55)
      (1.9599999999999997 . 3.413)
      (1.4 . 3.538)
      (1.9600000000000002 . 3.846)
      (1.54 . 3.402)
      (1.0799999999999998 . 3.692)
      (2.18 . 4.0)
      (1.26 . 3.402)
      (2.66 . 4.0)
      (2.52 . 3.994)
      (2.76 . 3.846)
      (1.9 . 4.0)
      (1.34 . 3.413)
      (1.4000000000000001 . 3.994)
      (2.6599999999999997 . 3.846)
      (1.7200000000000002 . 3.846)
      (1.2000000000000002 . 3.282)
      (1.4800000000000002 . 3.556)
      (2.38 . 3.84)
      (1.62 . 3.698)
      (1.94 . 4.0)
      (2.1399999999999997 . 3.556)
      (2.28 . 3.698)
      (0.98 . 3.55)
      (1.8199999999999998 . 3.402)
      (2.42 . 3.846)
      (2.46 . 3.994)
      (1.66 . 4.0)
      (1.38 . 4.0)
      (2.3200000000000003 . 4.154)
      (1.1600000000000001 . 3.698)
      (1.2 . 3.55)
      (1.3 . 3.846)
      (1.24 . 3.846)
      (1.0599999999999998 . 3.692)
      (1.6800000000000002 . 3.538)
      (1.3800000000000001 . 3.698)
      (2.22 . 4.0)
      (2.32 . 3.84)
      (1.48 . 3.55)
      (1.52 . 3.846)
      (1.3399999999999999 . 3.692)
      (1.6600000000000001 . 3.698)
      (1.6199999999999999 . 3.692)
      (1.8 . 3.846)
      (1.76 . 3.846)
      (1.9400000000000002 . 3.698)
      (1.9000000000000001 . 3.413)
      (2.08 . 3.846)
      (2.04 . 3.55)
      (2.2199999999999998 . 3.698)
      (2.6 . 4.154)
      (2.1799999999999997 . 3.692)
      (2.5 . 4.0)
      (2.36 . 3.846)
      (1.7000000000000002 . 3.44)
      (1.96 . 3.538))))
 '(org-drill-save-buffers-after-drill-sessions-p nil)
 '(org-drill-scope 'directory)
 '(org-duration-format '((special . h:mm)))
 '(org-email-link-description-format "%f: %.100s")
 '(org-export-allow-bind-keywords t)
 '(org-export-backends '(ascii html latex md odt))
 '(org-export-select-tags '("export_org"))
 '(org-extend-today-until 4)
 '(org-fast-tag-selection-single-key 'expert)
 '(org-file-apps
   '((auto-mode . emacs)
     ("\\.mm\\'" . default)
     ("\\.x?html?\\'" . default)
     ("\\.pdf\\'" . "zathura %s")))
 '(org-fontify-done-headline t)
 '(org-fontify-quote-and-verse-blocks t)
 '(org-fontify-whole-heading-line t)
 '(org-footnote-auto-label 'random)
 '(org-footnote-define-inline t)
 '(org-format-latex-options
   '(:foreground default :background default :scale 3.0 :html-foreground "Black" :html-background "Transparent" :html-scale 1.0 :matchers
     ("begin" "$1" "$" "$$" "\\(" "\\[")))
 '(org-graph-targets
   '((nil :maxlevel . 9)
     (org-agenda-files :maxlevel . 9)
     (my-org-graph-targets--config-files :maxlevel . 9)))
 '(org-habit-following-days 1)
 '(org-habit-graph-column 80)
 '(org-habit-preceding-days 30)
 '(org-habit-show-habits-only-for-today nil)
 '(org-hide-emphasis-markers t)
 '(org-hide-leading-stars t)
 '(org-indent-indentation-per-level 1)
 '(org-inline-image-resolve-url '(org-inline-image--regexp-resolver identity))
 '(org-jira-default-jql
   "assignee = currentUser() and resolution = unresolved and \"In active sprint\" = Yes ORDER BY
  priority DESC, created ASC")
 '(org-jira-done-states '("Declined" "Done"))
 '(org-jira-keywords-to-jira-status-alist
   '(("In Progress" . "NEXT")
     ("Feedback Needed" . "WAIT")
     ("Testing needed" . "WAIT")
     ("New" . "IDEA")) t)
 '(org-jira-priority-to-org-priority-alist
   '(("Highest" . 65)
     ("High" . 66)
     ("Medium" . 67)
     ("Low" . 68)
     ("Lowest" . 69)))
 '(org-jira-priority-to-org-priority-omit-default-priority t)
 '(org-jira-project-filename-alist '(("SC" . "saleschamp.org")))
 '(org-jira-reverse-comment-order t)
 '(org-jira-working-dir "~/org")
 '(org-latex-tables-centered nil)
 '(org-link-email-description-format "%f: %.100s")
 '(org-log-done 'note)
 '(org-log-into-drawer t)
 '(org-modules
   '(org-bbdb org-bibtex org-crypt org-gnus org-habit org-id org-info org-inlinetask org-checklist org-depend org-drill))
 '(org-outline-path-complete-in-steps nil)
 '(org-priority-default 67)
 '(org-priority-lowest 69)
 '(org-priority-start-cycle-with-default nil)
 '(org-radiobutton-mode t t (org-radiobutton))
 '(org-refile-allow-creating-parent-nodes 'confirm)
 '(org-refile-target-verify-function 'my-org-verify-refile-target)
 '(org-refile-targets '((nil :maxlevel . 9) (org-agenda-files :maxlevel . 9)))
 '(org-refile-use-cache t)
 '(org-refile-use-outline-path 'file)
 '(org-scheduled-delay-days 0)
 '(org-show-entry-below '((default . t)))
 '(org-show-following-heading '((default . t)))
 '(org-special-ctrl-a/e t)
 '(org-speed-commands-user
   '(("P" . org-graph-goto-parent)
     ("C" . org-graph-goto-child)
     ("T" . my-org-refile-this-file)))
 '(org-src-fontify-natively t)
 '(org-src-lang-modes
   '(("mongo" . js)
     ("ocaml" . tuareg)
     ("elisp" . emacs-lisp)
     ("ditaa" . artist)
     ("asymptote" . asy)
     ("dot" . fundamental)
     ("sqlite" . sql)
     ("calc" . fundamental)
     ("C" . c)
     ("cpp" . c++)
     ("C++" . c++)
     ("screen" . shell-script)))
 '(org-src-preserve-indentation t)
 '(org-src-window-setup 'current-window)
 '(org-startup-folded 'content)
 '(org-structure-template-alist
   '(("a" . "export ascii")
     ("c" . "center")
     ("C" . "comment")
     ("e" . "example")
     ("E" . "export")
     ("h" . "export html")
     ("l" . "export latex")
     ("q" . "quote")
     ("s" . "src")
     ("v" . "verse")
     ("A" . "ABSTRACT")))
 '(org-stuck-projects '("" nil nil ""))
 '(org-super-agenda-unmatched-order 10)
 '(org-support-shift-select t)
 '(org-tags-column -80)
 '(org-tags-exclude-from-inheritance '("folder" "publish" "ATTACH"))
 '(org-tags-sort-function 'string<)
 '(org-time-clocksum-format
   '(:hours "%d" :require-hours t :minutes ":%02d" :require-minutes t))
 '(org-tree-slide-slide-in-effect nil)
 '(org-use-fast-tag-selection t)
 '(org-use-property-inheritance '("CLOCK_MODELINE_TOTAL"))
 '(org-use-speed-commands t)
 '(overseer-command "eask exec ert-runner")
 '(package-enable-at-startup nil)
 '(paren-face-regexp "[(){}]")
 '(pj-line-width 1100)
 '(pomidor-play-sound-file nil)
 '(pomidor-seconds 1200)
 '(pos-tip-background-color "#eee8d5")
 '(pos-tip-foreground-color "#586e75")
 '(preview-scale-function 1.5)
 '(proced-auto-update-flag t)
 '(proced-auto-update-interval 1)
 '(projectile-globally-ignored-directories
   '(".idea" ".eunit" ".git" ".hg" ".fslckout" ".bzr" "_darcs" "elpa"))
 '(projectile-project-root-files
   '(".dir-locals.el" ".projectile" ".git" ".hg" ".fslckout" ".bzr" "_darcs" "rebar.config" "project.clj" "pom.xml" "build.sbt" "Gemfile" "Makefile"))
 '(projectile-switch-project-action (lambda nil (dired default-directory)))
 '(proof-three-window-mode-policy 'hybrid)
 '(python-shell-interpreter "python3")
 '(rainbow-r-colors t)
 '(reftex-label-alist
   '(("lemma" 32 "lem:" "~\\cref{%s}" nil nil)
     ("theorem" 32 "th:" "~\\cref{%s}" nil nil)))
 '(require-final-newline t)
 '(restclient-inhibit-cookies t)
 '(safe-local-variable-values
   '((ft-source-to-test-mapping
      (:path "Elsa/" :prefix "elsa-")
      :path "Elsa/tests/" :prefix "test-")
     (flycheck-php-phpstan-executable . "/home/matus/dev/php/Sandbox/core/tests/phpstan/docker-phpstan")
     (eval font-lock-add-keywords nil
           `((,(concat "("
                       (regexp-opt
                        '("sp-do-move-op" "sp-do-move-cl" "sp-do-put-op" "sp-do-put-cl" "sp-do-del-op" "sp-do-del-cl")
                        t)
                       "\\_>")
              1 'font-lock-variable-name-face)))
     (flycheck-php-phpstan-executable . "/home/matus/dev/php/Sandbox/core/tests/phpstan/docker-phpstan")
     (ft-source-to-test-mapping
      (:path "/" :prefix "elsa-")
      :path "/tests/" :prefix "test-")
     (eval sql-set-product 'ms)
     (checkdoc-package-keywords-flag)
     (eval font-lock-add-keywords nil
           (-map
            (-lambda
              ((face . color))
              (let
                  ((pattern
                    (concat "\\_<"
                            (symbol-name face)
                            "\\_>"))
                   (color-resolved
                    (if
                        (stringp color)
                        color
                      (cdr
                       (assq color
                             (cdar my-tango-colors))))))
                (list pattern 0
                      `(rainbow-colorize-match ,color-resolved)
                      'prepend)))
            (cdar my-tango-colors))
           'append)
     (flycheck-php-phpstan-executable . "/home/matus/dev/php/Sandbox/core/tests/phpstan/docker-phpstan")
     (compilation-search-path . "/home/matus/dev/ydistri/math")
     (ft-source-to-test-mapping
      (:path "/R/" :prefix "")
      :path "/tests/testthat/" :prefix "test-")
     (eval add-to-list 'imenu-generic-expression
           '("Used Packages" "\\(^(use-package +\\)\\(\\_<.+\\_>\\)" 2))
     (flycheck-php-phpstan-executable . "/home/matus/dev/php/Sandbox/core/tests/phpstan/docker-phpstan")
     (org-drill-maximum-items-per-session . 1)
     (org-drill-scope . file)
     (eval ispell-change-dictionary "slovak")
     (eval set-input-method "slovak-prog-2")))
 '(show-paren-mode nil)
 '(show-smartparens-global-mode t)
 '(smart-jump-bind-keys t)
 '(smart-jump-default-order-weight 500)
 '(smart-jump-jump-key "M-'")
 '(smart-jump-pop-key "C-M-'")
 '(smart-jump-refs-key "M-\"")
 '(smartrep-mode-line-active-bg (solarized-color-blend "#859900" "#eee8d5" 0.2))
 '(smtpmail-smtp-server "smtp.gmail.com")
 '(smtpmail-smtp-service 587)
 '(smtpmail-stream-type 'starttls)
 '(solarized-scale-org-headlines nil)
 '(sp-ignore-modes-list nil)
 '(swb-crypt-key "matus.goljer@gmail.com")
 '(term-default-bg-color "#fdf6e3")
 '(term-default-fg-color "#657b83")
 '(user-full-name "Matúš Goljer")
 '(user-mail-address "matus.goljer@gmail.com")
 '(vc-annotate-background nil)
 '(vc-annotate-background-mode nil)
 '(vc-annotate-color-map
   '((20 . "#dc322f")
     (40 . "#ca7966842090")
     (60 . "#c05678c91534")
     (80 . "#b58900")
     (100 . "#a6088eed0000")
     (120 . "#9e3a91a70000")
     (140 . "#9629943b0000")
     (160 . "#8dc696ae0000")
     (180 . "#859900")
     (200 . "#76f09b6145e9")
     (220 . "#6cd69caa5b9d")
     (240 . "#5f5f9e06701f")
     (260 . "#4c1b9f788425")
     (280 . "#2aa198")
     (300 . "#3003984faf4d")
     (320 . "#2f7093e9bae0")
     (340 . "#2c5a8f79c670")
     (360 . "#268bd2")))
 '(vc-annotate-very-old-color nil)
 '(vc-follow-symlinks t)
 '(warning-suppress-types '((comp)))
 '(weechat-color-list
   '(unspecified "#fdf6e3" "#eee8d5" "#a7020a" "#dc322f" "#5b7300" "#859900" "#866300" "#b58900" "#0061a8" "#268bd2" "#a00559" "#d33682" "#007d76" "#2aa198" "#657b83" "#839496"))
 '(which-func-modes nil)
 '(winner-mode t)
 '(xterm-color-names
   ["#eee8d5" "#dc322f" "#859900" "#b58900" "#268bd2" "#d33682" "#2aa198" "#073642"])
 '(xterm-color-names-bright
   ["#fdf6e3" "#cb4b16" "#93a1a1" "#839496" "#657b83" "#6c71c4" "#586e75" "#002b36"])
 '(yankpad-file "/home/matus/data/documents/yankpad.org")
 '(yankpad-use-yasnippet nil))

(put 'narrow-to-region 'disabled nil)
(put 'narrow-to-page 'disabled nil)
(put 'set-goal-column 'disabled nil)
(put 'downcase-region 'disabled nil)
(put 'upcase-region 'disabled nil)
(put 'dired-find-alternate-file 'disabled nil)
(put 'erase-buffer 'disabled nil)
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
