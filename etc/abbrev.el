;;-*-coding: utf-8;-*-
(define-abbrev-table 'Rd-mode-abbrev-table
  '(
    ("`ag" "\\arguments" nil :count 0)
    ("`al" "\\alias" nil :count 0)
    ("`au" "\\author" nil :count 0)
    ("`bf" "\\bold" nil :count 0)
    ("`co" "\\code" nil :count 0)
    ("`de" "\\describe" nil :count 0)
    ("`dn" "\\description" nil :count 0)
    ("`dt" "\\details" nil :count 0)
    ("`em" "\\emph" nil :count 0)
    ("`en" "\\enumerate" nil :count 0)
    ("`ex" "\\examples" nil :count 0)
    ("`fi" "\\file" nil :count 0)
    ("`fo" "\\format" nil :count 0)
    ("`it" "\\item" nil :count 0)
    ("`iz" "\\itemize" nil :count 0)
    ("`kw" "\\keyword" nil :count 0)
    ("`li" "\\link" nil :count 0)
    ("`me" "\\method" nil :count 0)
    ("`na" "\\name" nil :count 0)
    ("`no" "\\note" nil :count 0)
    ("`re" "\\references" nil :count 0)
    ("`sa" "\\seealso" nil :count 0)
    ("`se" "\\section" nil :count 0)
    ("`so" "\\source" nil :count 0)
    ("`ss" "\\subsection" nil :count 0)
    ("`sy" "\\synopsis" nil :count 0)
    ("`ta" "\\tabular" nil :count 0)
    ("`ti" "\\title" nil :count 0)
    ("`us" "\\usage" nil :count 0)
    ("`va" "\\value" nil :count 0)
   ))

(define-abbrev-table 'emacs-lisp-mode-abbrev-table
  '(
    ("atl" "add-to-list" nil :count 0)
    ("bc" "backward-char" nil :count 0)
    ("bfn" "buffer-file-name" nil :count 0)
    ("bod" "beginning-of-defun" nil :count 0)
    ("bs" "buffer-substring" nil :count 0)
    ("bsnp" "buffer-substring-no-properties" nil :count 0)
    ("ca" "char-after" nil :count 0)
    ("cb" "current-buffer" nil :count 0)
    ("cc" "condition-case" nil :count 0)
    ("ci" "call-interactively" nil :count 0)
    ("dc" "delete-char" nil :count 0)
    ("dd" "default-directory" nil :count 0)
    ("df" "declare-function" nil :count 0)
    ("dk" "define-key" nil :count 0)
    ("dm" "deactivate-mark" nil :count 0)
    ("dr" "delete-region" nil :count 0)
    ("eol" "end-of-line" nil :count 0)
    ("fc" "forward-char" nil :count 0)
    ("ff" "find-file" nil :count 0)
    ("fl" "forward-line" nil :count 0)
    ("fs" "forward-sexp" nil :count 0)
    ("gc" "goto-char" nil :count 0)
    ("ie" "ignore-errors" nil :count 0)
    ("ir" "indent-region" nil :count 0)
    ("jos" "just-one-space" nil :count 0)
    ("la" "looking-at" nil :count 0)
    ("lb" "looking-back" nil :count 0)
    ("lep" "line-end-position" nil :count 0)
    ("mb" "match-beginning" nil :count 0)
    ("me" "match-end" nil :count 0)
    ("mm" "major-mode" nil :count 0)
    ("ms" "match-string" nil :count 0)
    ("nai" "newline-and-indent" nil :count 0)
    ("ntr" "narrow-to-region" nil :count 0)
    ("ow" "other-window" nil :count 0)
    ("pa" "prefix-arg" nil :count 0)
    ("pm" "point-min" nil :count 0)
    ("rb" "region-beginning" nil :count 0)
    ("re" "region-end" nil :count 0)
    ("rm" "replace-match" nil :count 0)
    ("rris" "replace-regexp-in-string" nil :count 0)
    ("rsb" "re-search-backward" nil :count 0)
    ("rsf" "re-search-forward" nil :count 0)
    ("scb" "skip-chars-backward" nil :count 0)
    ("scf" "skip-chars-forward" nil :count 0)
    ("se" "save-excursion" nil :count 0)
    ("sf" "search-forward" nil :count 0)
    ("sic" "self-insert-command" nil :count 0)
    ("sm" "string-match" nil :count 0)
    ("smd" "save-match-data" nil :count 0)
    ("sn" "symbol-name" nil :count 0)
    ("snp" "substring-no-properties" nil :count 0)
    ("tap" "thing-at-point" nil :count 0)
    ("tc" "this-command" nil :count 0)
    ("ul" "up-list" nil :count 0)
    ("wcb" "with-current-buffer" nil :count 0)
   ))

(define-abbrev-table 'java-mode-abbrev-table
  '(
    ("pr" "private" nil :count 2)
    ("pu" "public" nil :count 3)
   ))

(define-abbrev-table 'php-mode-abbrev-table
  '(
    ("ar" "array" nil :count 1)
    ("pr" "protected" nil :count 0)
    ("prf" "protected function" nil :count 0)
    ("pu" "public" nil :count 1)
    ("puf" "public function" nil :count 50)
   ))

(define-abbrev-table 'swb-mode-abbrev-table
  '(
    ("cc" "count(*)" nil :count 0)
    ("ll" "limit 100" nil :count 4)
    ("pa" "promo_action pa" nil :count 7)
    ("paid" "promo_action_id" nil :count 1)
    ("pld" "product_locator_id" nil :count 5)
    ("plo" "product_locator_ordering plo" nil :count 5)
    ("sc" "select count(*) from" nil :count 7)
    ("sf" "select * from" nil :count 10)
   ))

